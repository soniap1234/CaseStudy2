%% Part 2
clear all
close all

load COVID_STL.mat

figure()
%A = [0.7 0.04 0 0; 0.05 0.85 0 0; 0 0.1 1 0; 0 0.01 0 1];
%A1 = [0.7 0.5 0 0; 0.05 0.39 0 0; 0 0.1 1 0; 0 0.01 0 1]; % change (1,2) from 0.04 to 0.5. change 2,2 from 0.85 to 0.39.
A1 = [0.7 0.0001 0 0; 0.05 0.8899 0 0; 0 0.1 1 0; 0 0.01 0 1];
A2 = [0.7 0.04 0 0; 0.05 0.85 0 0; 0 0.1 1 0; 0 0.01 0 1];
A3 = [0.7 0.04 0 0; 0.05 0.85 0 0; 0 0.1 1 0; 0 0.01 0 1];
A4 = [0.7 0.04 0 0; 0.05 0.85 0 0; 0 0.1 1 0; 0 0.01 0 1];

B = zeros(4,1); %B = zeros, so Bu(t) = 0, which means there are no external inputs. state x(t) only evolves using A.

x0 = [0.9 0.1 0 0]; %initial state of SIRD

C = eye(4);
D = zeros(4,1);

%sys_sir_base = ss(A,B,eye(4),zeros(4,1),1); %OG code

sys_sir_baseY = ss(A1,B,C,D,1); 
sys_sir_baseZ = ss(A2,B,C,D,1);      
sys_sir_baseA = ss(A3,B,C,D,1);
sys_sir_baseB = ss(A4,B,C,D,1);
sys_sir_baseB = ss(A4,B,C,D,1);


%A = initial state, B  = zeros, so x(t) only evolves with A.
% C is a 4x4 identity matrix, and D is zero, which means that y(t), the output
%of the system is just the current state of x(t)
%the last ",1" means sample time 1s

Y = lsim(sys_sir_baseY, zeros(67,1), linspace(0,66,67),  x0); % u = zeros, meaning there are no external inputs at time t

x0z = [Y(67,1) Y(67,2) Y(67,3) Y(67,4)];  

Z = lsim(sys_sir_baseZ, zeros(17,1), linspace(68,84,17), x0z);

x0a = [Z(17,1), Z(17,2), Z(17,3), Z(17,4)];

A = lsim(sys_sir_baseA, zeros(17,1), linspace(68,84,17), x0a);

x0b = [A(17,1), A(17,2), A(17,3), A(17,4)];

B = lsim(sys_sir_baseB, zeros(17,1), linspace(68,84,17), x0b);

C = lsim(sys_sir_baseC, zeros(17,1), linspace(68,84,17), x0c);


total = [Y;Z;A;B];

plot(total); % plot the output trajectory


legend('S','I','R','D');
xlabel('Time')
ylabel('Percentage Population');

%% new_cases and new_deaths shows us the amount of NEW cases/deaths per day (original data tables gave us cumulative values)

POP_STL = 1290497;

for i = 1:157
    new_cases(i) =  cases_STL(i+1)-cases_STL(i);
    infected_percent(i) = cases_STL(i)/POP_STL;

end 

for i = 1:157
    new_deaths(i) = deaths_STL(i+1)-deaths_STL(i);
    new_deaths_percent(i) = new_deaths(i)/POP_STL;
    deaths_percent(i) = deaths_STL(i)/POP_STL;
end

hold on
plot(infected_percent)
hold on
plot(deaths_percent)
legend('S','I','R','D','I data','D data')
